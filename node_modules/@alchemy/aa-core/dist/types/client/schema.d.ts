import type { Transport } from "viem";
import { z } from "zod";
import type { BundlerClient } from "./bundlerClient.js";
export declare const createPublicErc4337ClientSchema: <TTransport extends Transport = Transport>() => z.ZodType<BundlerClient<TTransport>, z.ZodTypeDef, BundlerClient<TTransport>>;
export declare const ConnectionConfigSchema: z.ZodUnion<[z.ZodObject<{
    rpcUrl: z.ZodOptional<z.ZodNever>;
    apiKey: z.ZodString;
    jwt: z.ZodOptional<z.ZodNever>;
}, "strip", z.ZodTypeAny, {
    apiKey: string;
    rpcUrl?: undefined;
    jwt?: undefined;
}, {
    apiKey: string;
    rpcUrl?: undefined;
    jwt?: undefined;
}>, z.ZodObject<{
    rpcUrl: z.ZodOptional<z.ZodNever>;
    apiKey: z.ZodOptional<z.ZodNever>;
    jwt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    jwt: string;
    rpcUrl?: undefined;
    apiKey?: undefined;
}, {
    jwt: string;
    rpcUrl?: undefined;
    apiKey?: undefined;
}>, z.ZodObject<{
    rpcUrl: z.ZodString;
    apiKey: z.ZodOptional<z.ZodNever>;
    jwt: z.ZodOptional<z.ZodNever>;
}, "strip", z.ZodTypeAny, {
    rpcUrl: string;
    apiKey?: undefined;
    jwt?: undefined;
}, {
    rpcUrl: string;
    apiKey?: undefined;
    jwt?: undefined;
}>, z.ZodObject<{
    rpcUrl: z.ZodString;
    apiKey: z.ZodOptional<z.ZodNever>;
    jwt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    rpcUrl: string;
    jwt: string;
    apiKey?: undefined;
}, {
    rpcUrl: string;
    jwt: string;
    apiKey?: undefined;
}>]>;
export declare const UserOperationFeeOptionsFieldSchema: z.ZodObject<{
    min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
    max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
    multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
}, "strict", z.ZodTypeAny, {
    min?: number | bigint | `0x${string}` | undefined;
    max?: number | bigint | `0x${string}` | undefined;
    multiplier?: number | undefined;
}, {
    min?: number | bigint | `0x${string}` | undefined;
    max?: number | bigint | `0x${string}` | undefined;
    multiplier?: number | undefined;
}>;
export declare const UserOperationFeeOptionsSchema_v6: z.ZodObject<{
    maxFeePerGas: z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>;
    maxPriorityFeePerGas: z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>;
    callGasLimit: z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>;
    verificationGasLimit: z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>;
    preVerificationGas: z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    maxFeePerGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    maxPriorityFeePerGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    callGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    verificationGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    preVerificationGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
}, {
    maxFeePerGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    maxPriorityFeePerGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    callGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    verificationGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    preVerificationGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
}>;
export declare const UserOperationFeeOptionsSchema_v7: z.ZodObject<{
    callGasLimit: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>>;
    verificationGasLimit: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>>;
    preVerificationGas: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>>;
    maxFeePerGas: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>>;
    maxPriorityFeePerGas: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>>;
    paymasterVerificationGasLimit: z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>;
    paymasterPostOpGasLimit: z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    callGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    verificationGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    preVerificationGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    maxFeePerGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    maxPriorityFeePerGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    paymasterVerificationGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    paymasterPostOpGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
}, {
    callGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    verificationGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    preVerificationGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    maxFeePerGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    maxPriorityFeePerGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    paymasterVerificationGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    paymasterPostOpGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
}>;
export declare const UserOperationFeeOptionsSchema: z.ZodObject<{
    callGasLimit: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>>;
    verificationGasLimit: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>>;
    preVerificationGas: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>>;
    maxFeePerGas: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>>;
    maxPriorityFeePerGas: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>>;
    paymasterVerificationGasLimit: z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>;
    paymasterPostOpGasLimit: z.ZodOptional<z.ZodObject<{
        min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
        multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
    }, "strict", z.ZodTypeAny, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }, {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    callGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    verificationGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    preVerificationGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    maxFeePerGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    maxPriorityFeePerGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    paymasterVerificationGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    paymasterPostOpGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
}, {
    callGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    verificationGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    preVerificationGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    maxFeePerGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    maxPriorityFeePerGas?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    paymasterVerificationGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
    paymasterPostOpGasLimit?: {
        min?: number | bigint | `0x${string}` | undefined;
        max?: number | bigint | `0x${string}` | undefined;
        multiplier?: number | undefined;
    } | undefined;
}>;
export declare const SmartAccountClientOptsSchema: z.ZodObject<{
    /**
     * The maximum number of times to try fetching a transaction receipt before giving up (default: 5)
     */
    txMaxRetries: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
    /**
     * The interval in milliseconds to wait between retries while waiting for tx receipts (default: 2_000)
     */
    txRetryIntervalMs: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
    /**
     * The multiplier on interval length to wait between retries while waiting for tx receipts (default: 1.5)
     */
    txRetryMultiplier: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
    /**
     * Optional user operation fee options to be set globally at the provider level
     */
    feeOptions: z.ZodOptional<z.ZodObject<{
        callGasLimit: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
        }, "strict", z.ZodTypeAny, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }>>>;
        verificationGasLimit: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
        }, "strict", z.ZodTypeAny, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }>>>;
        preVerificationGas: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
        }, "strict", z.ZodTypeAny, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }>>>;
        maxFeePerGas: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
        }, "strict", z.ZodTypeAny, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }>>>;
        maxPriorityFeePerGas: z.ZodOptional<z.ZodOptional<z.ZodObject<{
            min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
        }, "strict", z.ZodTypeAny, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }>>>;
        paymasterVerificationGasLimit: z.ZodOptional<z.ZodObject<{
            min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
        }, "strict", z.ZodTypeAny, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }>>;
        paymasterPostOpGasLimit: z.ZodOptional<z.ZodObject<{
            min: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            max: z.ZodOptional<z.ZodOptional<z.ZodUnion<[z.ZodType<`0x${string}`, z.ZodTypeDef, `0x${string}`>, z.ZodNumber, z.ZodBigInt]>>>;
            multiplier: z.ZodOptional<z.ZodEffects<z.ZodNumber, number, number>>;
        }, "strict", z.ZodTypeAny, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }, {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        callGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        verificationGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        preVerificationGas?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        maxFeePerGas?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        maxPriorityFeePerGas?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        paymasterVerificationGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        paymasterPostOpGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
    }, {
        callGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        verificationGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        preVerificationGas?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        maxFeePerGas?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        maxPriorityFeePerGas?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        paymasterVerificationGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        paymasterPostOpGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    txMaxRetries: number;
    txRetryIntervalMs: number;
    txRetryMultiplier: number;
    feeOptions?: {
        callGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        verificationGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        preVerificationGas?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        maxFeePerGas?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        maxPriorityFeePerGas?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        paymasterVerificationGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        paymasterPostOpGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
    } | undefined;
}, {
    txMaxRetries?: number | undefined;
    txRetryIntervalMs?: number | undefined;
    txRetryMultiplier?: number | undefined;
    feeOptions?: {
        callGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        verificationGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        preVerificationGas?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        maxFeePerGas?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        maxPriorityFeePerGas?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        paymasterVerificationGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
        paymasterPostOpGasLimit?: {
            min?: number | bigint | `0x${string}` | undefined;
            max?: number | bigint | `0x${string}` | undefined;
            multiplier?: number | undefined;
        } | undefined;
    } | undefined;
}>;
//# sourceMappingURL=schema.d.ts.map