import type { Chain, Client, Transport } from "viem";
import { type GetEntryPointFromAccount, type SmartContractAccount } from "../../account/smartContractAccount.js";
import type { UserOperationEstimateGasResponse } from "../../types.js";
import type { SendUserOperationParameters, UserOperationContext } from "./types.js";
/**
 * Description SmartAccountClientAction for estimating the gas cost of a user operation
 *
 * @async
 * @template {Transport} TTransport
 * @template {Chain | undefined} TChain
 * @template {SmartContractAccount | undefined} TAccount
 * @template {UserOperationContext | undefined} TContext
 * @template {GetEntryPointFromAccount<TAccount>} TEntryPointVersion
 * @param client smart account client
 * @param args send user operation parameters
 * @returns user operation gas estimate response
 */
export declare function estimateUserOperationGas<TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TAccount extends SmartContractAccount | undefined = SmartContractAccount | undefined, TContext extends UserOperationContext | undefined = UserOperationContext | undefined, TEntryPointVersion extends GetEntryPointFromAccount<TAccount> = GetEntryPointFromAccount<TAccount>>(client: Client<TTransport, TChain, TAccount>, args: SendUserOperationParameters<TAccount, TContext>): Promise<UserOperationEstimateGasResponse<TEntryPointVersion>>;
//# sourceMappingURL=estimateUserOperationGas.d.ts.map