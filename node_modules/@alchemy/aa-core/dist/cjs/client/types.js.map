{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/client/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { Address } from \"abitype\";\nimport type { Hash, Hex } from \"viem\";\nimport type { z } from \"zod\";\nimport type { UserOperationContext } from \"../actions/smartAccount/types.js\";\nimport type { EntryPointVersion } from \"../entrypoint/types.js\";\nimport type {\n  ClientMiddleware,\n  ClientMiddlewareFn,\n} from \"../middleware/types.js\";\nimport type { UserOperationRequest } from \"../types.js\";\nimport type { ConnectionConfigSchema } from \"./schema.js\";\n\nexport type ConnectorData = {\n  chainId?: Hex;\n};\n\nexport type ConnectionConfig = z.input<typeof ConnectionConfigSchema>;\n\n// [!region SendUserOperationResult]\nexport type SendUserOperationResult<\n  TEntryPointVersion extends EntryPointVersion = EntryPointVersion\n> = {\n  hash: Hash;\n  request: UserOperationRequest<TEntryPointVersion>;\n};\n// [!endregion SendUserOperationResult]\n\n// [!region UpgradeToData]\nexport type UpgradeToData = {\n  implAddress: Address;\n  initializationData: Hex;\n};\n// [!endregion UpgradeToData]\n\n// [!region ClientMiddlewareConfig]\nexport type ClientMiddlewareConfig<\n  TContext extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n> = Omit<\n  Partial<ClientMiddleware<TContext>>,\n  \"dummyPaymasterAndData\" | \"paymasterAndData\"\n> & {\n  paymasterAndData?: {\n    dummyPaymasterAndData: () =>\n      | UserOperationRequest<\"0.6.0\">[\"paymasterAndData\"]\n      | Pick<UserOperationRequest<\"0.7.0\">, \"paymaster\" | \"paymasterData\">;\n    paymasterAndData: ClientMiddlewareFn<TContext>;\n  };\n};\n// [!endregion ClientMiddlewareConfig]\n"]}