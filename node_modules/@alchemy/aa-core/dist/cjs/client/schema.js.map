{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../src/client/schema.ts"],"names":[],"mappings":";;;AACA,6BAAwB;AAExB,gDAA8E;AAGvE,MAAM,+BAA+B,GAAG,GAE3C,EAAE,CACJ,OAAC,CAAC,MAAM,CAA4B,CAAC,QAAQ,EAAE,EAAE;IAC/C,OAAO,CACL,QAAQ,IAAI,IAAI;QAChB,OAAO,QAAQ,KAAK,QAAQ;QAC5B,SAAS,IAAI,QAAQ;QACrB,MAAM,IAAI,QAAQ;QAClB,KAAK,IAAI,QAAQ;QACjB,MAAM,IAAI,QAAQ,CACnB,CAAC;AACJ,CAAC,CAAC,CAAC;AAZQ,QAAA,+BAA+B,mCAYvC;AAGQ,QAAA,sBAAsB,GAAG,OAAC,CAAC,KAAK,CAAC;IAC5C,OAAC,CAAC,MAAM,CAAC;QACP,MAAM,EAAE,OAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;QAC5B,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE;QAClB,GAAG,EAAE,OAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;KAC1B,CAAC;IACF,OAAC,CAAC,MAAM,CAAC;QACP,MAAM,EAAE,OAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;QAC5B,MAAM,EAAE,OAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;QAC5B,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE;KAChB,CAAC;IACF,OAAC,CAAC,MAAM,CAAC;QACP,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE;QAClB,MAAM,EAAE,OAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;QAC5B,GAAG,EAAE,OAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;KAC1B,CAAC;IACF,OAAC,CAAC,MAAM,CAAC;QACP,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE;QAClB,MAAM,EAAE,OAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;QAC5B,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE;KAChB,CAAC;CACH,CAAC,CAAC;AAGU,QAAA,kCAAkC,GAC7C,kCAAuB,CAAC,KAAK,CAAC,2BAAgB,CAAC,CAAC,OAAO,EAAE,CAAC;AAE/C,QAAA,gCAAgC,GAAG,OAAC;KAC9C,MAAM,CAAC;IACN,YAAY,EAAE,0CAAkC;IAChD,oBAAoB,EAAE,0CAAkC;IACxD,YAAY,EAAE,0CAAkC;IAChD,oBAAoB,EAAE,0CAAkC;IACxD,kBAAkB,EAAE,0CAAkC;CACvD,CAAC;KACD,OAAO,EAAE;KACT,MAAM,EAAE,CAAC;AAEC,QAAA,gCAAgC,GAC3C,wCAAgC,CAAC,MAAM,CAAC;IACtC,6BAA6B,EAAE,0CAAkC;IACjE,uBAAuB,EAAE,0CAAkC;CAC5D,CAAC;KACC,OAAO,EAAE;KACT,MAAM,EAAE,CAAC;AAED,QAAA,6BAA6B,GAAG,wCAAgC,CAAC;AAEjE,QAAA,4BAA4B,GAAG,OAAC;KAC1C,MAAM,CAAC;IAIN,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAKrD,iBAAiB,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAK,CAAC;IAK9D,iBAAiB,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC;IAK5D,UAAU,EAAE,qCAA6B,CAAC,QAAQ,EAAE;CACrD,CAAC;KACD,MAAM,EAAE,CAAC","sourcesContent":["import type { Transport } from \"viem\";\nimport { z } from \"zod\";\n\nimport { BigNumberishRangeSchema, MultiplierSchema } from \"../utils/index.js\";\nimport type { BundlerClient } from \"./bundlerClient.js\";\n\nexport const createPublicErc4337ClientSchema = <\n  TTransport extends Transport = Transport\n>() =>\n  z.custom<BundlerClient<TTransport>>((provider) => {\n    return (\n      provider != null &&\n      typeof provider === \"object\" &&\n      \"request\" in provider &&\n      \"type\" in provider &&\n      \"key\" in provider &&\n      \"name\" in provider\n    );\n  });\n\n// [!region ConnectionConfigSchema]\nexport const ConnectionConfigSchema = z.union([\n  z.object({\n    rpcUrl: z.never().optional(),\n    apiKey: z.string(),\n    jwt: z.never().optional(),\n  }),\n  z.object({\n    rpcUrl: z.never().optional(),\n    apiKey: z.never().optional(),\n    jwt: z.string(),\n  }),\n  z.object({\n    rpcUrl: z.string(),\n    apiKey: z.never().optional(),\n    jwt: z.never().optional(),\n  }),\n  z.object({\n    rpcUrl: z.string(),\n    apiKey: z.never().optional(),\n    jwt: z.string(),\n  }),\n]);\n// [!endregion ConnectionConfigSchema]\n\nexport const UserOperationFeeOptionsFieldSchema =\n  BigNumberishRangeSchema.merge(MultiplierSchema).partial();\n\nexport const UserOperationFeeOptionsSchema_v6 = z\n  .object({\n    maxFeePerGas: UserOperationFeeOptionsFieldSchema,\n    maxPriorityFeePerGas: UserOperationFeeOptionsFieldSchema,\n    callGasLimit: UserOperationFeeOptionsFieldSchema,\n    verificationGasLimit: UserOperationFeeOptionsFieldSchema,\n    preVerificationGas: UserOperationFeeOptionsFieldSchema,\n  })\n  .partial()\n  .strict();\n\nexport const UserOperationFeeOptionsSchema_v7 =\n  UserOperationFeeOptionsSchema_v6.extend({\n    paymasterVerificationGasLimit: UserOperationFeeOptionsFieldSchema,\n    paymasterPostOpGasLimit: UserOperationFeeOptionsFieldSchema,\n  })\n    .partial()\n    .strict();\n\nexport const UserOperationFeeOptionsSchema = UserOperationFeeOptionsSchema_v7;\n\nexport const SmartAccountClientOptsSchema = z\n  .object({\n    /**\n     * The maximum number of times to try fetching a transaction receipt before giving up (default: 5)\n     */\n    txMaxRetries: z.number().min(0).optional().default(5),\n\n    /**\n     * The interval in milliseconds to wait between retries while waiting for tx receipts (default: 2_000)\n     */\n    txRetryIntervalMs: z.number().min(0).optional().default(2_000),\n\n    /**\n     * The multiplier on interval length to wait between retries while waiting for tx receipts (default: 1.5)\n     */\n    txRetryMultiplier: z.number().min(0).optional().default(1.5),\n\n    /**\n     * Optional user operation fee options to be set globally at the provider level\n     */\n    feeOptions: UserOperationFeeOptionsSchema.optional(),\n  })\n  .strict();\n"]}