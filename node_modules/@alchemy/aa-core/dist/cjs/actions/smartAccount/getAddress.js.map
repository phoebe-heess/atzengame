{"version":3,"file":"getAddress.js","sourceRoot":"","sources":["../../../../src/actions/smartAccount/getAddress.ts"],"names":[],"mappings":";;;AAMA,wDAA+D;AAExD,MAAM,UAAU,GASR,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;IAC9B,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC;IACxD,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,iCAAoB,EAAE,CAAC;IACnC,CAAC;IAED,OAAO,OAAO,CAAC,OAAO,CAAC;AACzB,CAAC,CAAC;AAhBW,QAAA,UAAU,cAgBrB","sourcesContent":["import type { Address } from \"abitype\";\nimport type { Chain, Client, Transport } from \"viem\";\nimport type {\n  GetAccountParameter,\n  SmartContractAccount,\n} from \"../../account/smartContractAccount\";\nimport { AccountNotFoundError } from \"../../errors/account.js\";\n\nexport const getAddress: <\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n>(\n  client: Client<TTransport, TChain, TAccount>,\n  args: GetAccountParameter<TAccount>\n) => Address = (client, args) => {\n  const { account } = args ?? { account: client.account };\n  if (!account) {\n    throw new AccountNotFoundError();\n  }\n\n  return account.address;\n};\n"]}