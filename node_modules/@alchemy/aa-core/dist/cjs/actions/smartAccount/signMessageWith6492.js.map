{"version":3,"file":"signMessageWith6492.js","sourceRoot":"","sources":["../../../../src/actions/smartAccount/signMessageWith6492.ts"],"names":[],"mappings":";;;AAEA,wDAA+D;AAGxD,MAAM,mBAAmB,GASZ,KAAK,EAAE,MAAM,EAAE,EAAE,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE;IAC1E,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,iCAAoB,EAAE,CAAC;IACnC,CAAC;IAED,OAAO,OAAO,CAAC,mBAAmB,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;AAClD,CAAC,CAAC;AAfW,QAAA,mBAAmB,uBAe9B","sourcesContent":["import type { Chain, Client, Hex, Transport } from \"viem\";\nimport type { SmartContractAccount } from \"../../account/smartContractAccount\";\nimport { AccountNotFoundError } from \"../../errors/account.js\";\nimport type { SignMessageParameters } from \"./signMessage\";\n\nexport const signMessageWith6492: <\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n>(\n  client: Client<TTransport, TChain, TAccount>,\n  args: SignMessageParameters<TAccount>\n) => Promise<Hex> = async (client, { account = client.account, message }) => {\n  if (!account) {\n    throw new AccountNotFoundError();\n  }\n\n  return account.signMessageWith6492({ message });\n};\n"]}