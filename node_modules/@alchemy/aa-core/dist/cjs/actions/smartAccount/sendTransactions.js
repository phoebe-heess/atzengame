"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendTransactions = void 0;
const isSmartAccountClient_js_1 = require("../../client/isSmartAccountClient.js");
const account_js_1 = require("../../errors/account.js");
const client_js_1 = require("../../errors/client.js");
const useroperation_js_1 = require("../../errors/useroperation.js");
const buildUserOperationFromTxs_js_1 = require("./buildUserOperationFromTxs.js");
const sendUserOperation_js_1 = require("./internal/sendUserOperation.js");
const waitForUserOperationTransacation_js_1 = require("./waitForUserOperationTransacation.js");
async function sendTransactions(client, args) {
    const { requests, overrides, account = client.account, context } = args;
    if (!account) {
        throw new account_js_1.AccountNotFoundError();
    }
    if (!(0, isSmartAccountClient_js_1.isBaseSmartAccountClient)(client)) {
        throw new client_js_1.IncompatibleClientError("BaseSmartAccountClient", "sendTransactions", client);
    }
    const { uoStruct } = await (0, buildUserOperationFromTxs_js_1.buildUserOperationFromTxs)(client, {
        requests,
        overrides,
        account,
        context,
    });
    const { hash, request } = await (0, sendUserOperation_js_1._sendUserOperation)(client, {
        account,
        uoStruct,
        context,
        overrides,
    });
    return (0, waitForUserOperationTransacation_js_1.waitForUserOperationTransaction)(client, { hash }).catch((e) => {
        throw new useroperation_js_1.WaitForUserOperationError(request, e);
    });
}
exports.sendTransactions = sendTransactions;
//# sourceMappingURL=sendTransactions.js.map