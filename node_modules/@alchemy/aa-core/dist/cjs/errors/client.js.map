{"version":3,"file":"client.js","sourceRoot":"","sources":["../../../src/errors/client.ts"],"names":[],"mappings":";;;AACA,uCAAsC;AAEtC,MAAa,uBAAwB,SAAQ,mBAAS;IAEpD,YAAY,cAAsB,EAAE,MAAc,EAAE,MAAc;QAChE,KAAK,CACH;YACE,mBAAmB,MAAM,CAAC,IAAI,cAAc,cAAc,GAAG;YAC7D,qEAAqE,MAAM,IAAI;SAChF,CAAC,IAAI,CAAC,IAAI,CAAC,CACb,CAAC;QAPK;;;;mBAAO,yBAAyB;WAAC;IAQ1C,CAAC;CACF;AAVD,0DAUC;AAED,MAAa,kBAAmB,SAAQ,mBAAS;IAE/C,YAAY,MAAe;QACzB,KAAK,CAAC,mBAAmB,MAAM,EAAE,CAAC,CAAC;QAF5B;;;;mBAAO,oBAAoB;WAAC;IAGrC,CAAC;CACF;AALD,gDAKC;AAED,MAAa,kBAAmB,SAAQ,mBAAS;IAE/C;QACE,KAAK,CAAC,iCAAiC,CAAC,CAAC;QAFlC;;;;mBAAO,oBAAoB;WAAC;IAGrC,CAAC;CACF;AALD,gDAKC","sourcesContent":["import type { Client } from \"viem\";\nimport { BaseError } from \"./base.js\";\n\nexport class IncompatibleClientError extends BaseError {\n  override name = \"IncompatibleClientError\";\n  constructor(expectedClient: string, method: string, client: Client) {\n    super(\n      [\n        `Client of type (${client.type}) is not a ${expectedClient}.`,\n        `Create one with \\`createSmartAccountClient\\` first before using \\`${method}\\``,\n      ].join(\"\\n\")\n    );\n  }\n}\n\nexport class InvalidRpcUrlError extends BaseError {\n  override name = \"InvalidRpcUrlError\";\n  constructor(rpcUrl?: string) {\n    super(`Invalid RPC URL ${rpcUrl}`);\n  }\n}\n\nexport class ChainNotFoundError extends BaseError {\n  override name = \"ChainNotFoundError\";\n  constructor() {\n    super(\"No chain supplied to the client\");\n  }\n}\n"]}