{"version":3,"file":"userOpSigner.js","sourceRoot":"","sources":["../../../../src/middleware/defaults/userOpSigner.ts"],"names":[],"mappings":";;;AAAA,wDAA+D;AAC/D,sDAA4D;AAC5D,oEAA0E;AAC1E,mDAI8B;AAGvB,MAAM,mBAAmB,GAAuB,KAAK,EAC1D,MAAM,EACN,EAAE,MAAM,EAAE,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,EACpC,EAAE;IACF,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,iCAAoB,EAAE,CAAC;IACnC,CAAC;IAED,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC;QACnB,MAAM,IAAI,8BAAkB,EAAE,CAAC;IACjC,CAAC;IAED,MAAM,cAAc,GAAG,MAAM,IAAA,4BAAiB,EAAC,MAAM,CAAC,CAAC;IACvD,MAAM,OAAO,GAAG,IAAA,sBAAW,EAAC,cAAc,CAAC,CAAC;IAC5C,IAAI,CAAC,IAAA,yBAAc,EAAC,OAAO,CAAC,EAAE,CAAC;QAC7B,MAAM,IAAI,4CAAyB,CAAC,cAAc,CAAC,CAAC;IACtD,CAAC;IAED,OAAO;QACL,GAAG,cAAc;QACjB,SAAS,EAAE,MAAM,OAAO,CAAC,qBAAqB,CAC5C,OAAO,CAAC,aAAa,EAAE,CAAC,oBAAoB,CAAC,OAAO,CAAC,CACtD;KACF,CAAC;AACJ,CAAC,CAAC;AAxBW,QAAA,mBAAmB,uBAwB9B","sourcesContent":["import { AccountNotFoundError } from \"../../errors/account.js\";\nimport { ChainNotFoundError } from \"../../errors/client.js\";\nimport { InvalidUserOperationError } from \"../../errors/useroperation.js\";\nimport {\n  deepHexlify,\n  isValidRequest,\n  resolveProperties,\n} from \"../../utils/index.js\";\nimport type { ClientMiddlewareFn } from \"../types\";\n\nexport const defaultUserOpSigner: ClientMiddlewareFn = async (\n  struct,\n  { client, account = client.account }\n) => {\n  if (!account) {\n    throw new AccountNotFoundError();\n  }\n\n  if (!client?.chain) {\n    throw new ChainNotFoundError();\n  }\n\n  const resolvedStruct = await resolveProperties(struct);\n  const request = deepHexlify(resolvedStruct);\n  if (!isValidRequest(request)) {\n    throw new InvalidUserOperationError(resolvedStruct);\n  }\n\n  return {\n    ...resolvedStruct,\n    signature: await account.signUserOperationHash(\n      account.getEntryPoint().getUserOperationHash(request)\n    ),\n  };\n};\n"]}