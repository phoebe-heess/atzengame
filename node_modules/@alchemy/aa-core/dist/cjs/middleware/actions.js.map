{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../src/middleware/actions.ts"],"names":[],"mappings":";;;AAAA,+BAOc;AAOd,kDAG4B;AAC5B,gEAAiE;AACjE,gEAAiE;AACjE,wEAAyE;AACzE,gEAAiE;AACjE,2DAAqD;AA+B9C,MAAM,iBAAiB,GAC5B,CAAC,SAAiC,EAAE,EAAE,CACtC,CAOE,MAAsD,EACpB,EAAE,CAAC,CAAC;IACtC,UAAU,EAAE;QACV,gBAAgB,EAAE,SAAS,CAAC,gBAAgB,IAAI,kCAAc;QAC9D,qBAAqB,EAAE,SAAS,CAAC,gBAAgB,EAAE,qBAAqB;YACtE,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;gBAC5B,MAAM,IAAI,GAAG,SAAS,CAAC,gBAAiB,CAAC,qBAAqB,EAAE,CAAC;gBACjE,MAAM,kBAAkB,GACtB,OAAO,CAAC,aAAa,EAAE,CAAC,OAAO,KAAK,OAAO;oBACzC,CAAC,CAAC,IAAA,YAAK,EAAC,IAAI,CAAC;wBACX,CAAC,CAAC,IAAA,iCAAqB,EAAC,IAAI,CAAC;wBAC7B,CAAC,CAAC,IAAI;oBACR,CAAC,CAAC;wBACE,gBAAgB,EAAE,IAAA,YAAK,EAAC,IAAI,CAAC;4BAC3B,CAAC,CAAC,IAAI;4BACN,CAAC,CAAC,IAAA,kCAAsB,EAAC,IAAI,CAAC;qBACjC,CAAC;gBACR,OAAO,EAAE,GAAG,MAAM,EAAE,GAAG,kBAAkB,EAAE,CAAC;YAC9C,CAAC;YACH,CAAC,CAAC,6CAAuB;QAE3B,YAAY,EAAE,SAAS,CAAC,YAAY,IAAI,IAAA,qCAAmB,EAAC,MAAM,CAAC;QACnE,YAAY,EAAE,SAAS,CAAC,YAAY,IAAI,IAAA,qCAAmB,EAAC,MAAM,CAAC;QACnE,gBAAgB,EACd,SAAS,CAAC,gBAAgB,EAAE,gBAAgB,IAAI,6CAAuB;QACzE,sBAAsB,EACpB,SAAS,CAAC,sBAAsB,IAAI,kCAAc;QACpD,iBAAiB,EAAE,SAAS,CAAC,iBAAiB,IAAI,qCAAmB;KACtE;CACF,CAAC,CAAC;AAtCQ,QAAA,iBAAiB,qBAsCzB","sourcesContent":["import {\n  isHex,\n  type Chain,\n  type Client,\n  type PublicActions,\n  type PublicRpcSchema,\n  type Transport,\n} from \"viem\";\nimport type { SmartContractAccount } from \"../account/smartContractAccount.js\";\nimport type {\n  BundlerActions,\n  BundlerRpcSchema,\n} from \"../client/decorators/bundlerClient.js\";\nimport type { ClientMiddlewareConfig } from \"../client/types.js\";\nimport {\n  concatPaymasterAndData,\n  parsePaymasterAndData,\n} from \"../utils/userop.js\";\nimport { defaultFeeEstimator } from \"./defaults/feeEstimator.js\";\nimport { defaultGasEstimator } from \"./defaults/gasEstimator.js\";\nimport { defaultPaymasterAndData } from \"./defaults/paymasterAndData.js\";\nimport { defaultUserOpSigner } from \"./defaults/userOpSigner.js\";\nimport { noopMiddleware } from \"./noopMiddleware.js\";\nimport type { ClientMiddleware } from \"./types.js\";\n\n/**\n * Middleware client type\n *\n * @template {Transport} TTransport\n * @template {Chain | undefined} TChain\n * @template {SmartContractAccount | undefined} TAccount\n */\nexport type MiddlewareClient<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n> = Client<\n  TTransport,\n  TChain,\n  TAccount,\n  [...BundlerRpcSchema, ...PublicRpcSchema],\n  PublicActions & BundlerActions\n>;\n\n/**\n * export function that takes in {@link ClientMiddlewareConfig} used during client initiation\n * and returns the middleware actions object that the smart account client extends with\n *\n * @param overrides - {@link ClientMiddlewareConfig} used during client initiation for overriding default middlewares\n * @returns middleware actions object\n */\nexport const middlewareActions =\n  (overrides: ClientMiddlewareConfig) =>\n  <\n    TTransport extends Transport = Transport,\n    TChain extends Chain | undefined = Chain | undefined,\n    TAccount extends SmartContractAccount | undefined =\n      | SmartContractAccount\n      | undefined\n  >(\n    client: MiddlewareClient<TTransport, TChain, TAccount>\n  ): { middleware: ClientMiddleware } => ({\n    middleware: {\n      customMiddleware: overrides.customMiddleware ?? noopMiddleware,\n      dummyPaymasterAndData: overrides.paymasterAndData?.dummyPaymasterAndData\n        ? async (struct, { account }) => {\n            const data = overrides.paymasterAndData!.dummyPaymasterAndData();\n            const paymasterOverrides =\n              account.getEntryPoint().version === \"0.7.0\"\n                ? isHex(data)\n                  ? parsePaymasterAndData(data)\n                  : data\n                : {\n                    paymasterAndData: isHex(data)\n                      ? data\n                      : concatPaymasterAndData(data),\n                  };\n            return { ...struct, ...paymasterOverrides };\n          }\n        : defaultPaymasterAndData,\n\n      feeEstimator: overrides.feeEstimator ?? defaultFeeEstimator(client),\n      gasEstimator: overrides.gasEstimator ?? defaultGasEstimator(client),\n      paymasterAndData:\n        overrides.paymasterAndData?.paymasterAndData ?? defaultPaymasterAndData,\n      userOperationSimulator:\n        overrides.userOperationSimulator ?? noopMiddleware,\n      signUserOperation: overrides.signUserOperation ?? defaultUserOpSigner,\n    },\n  });\n"]}