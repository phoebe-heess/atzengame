{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/middleware/types.ts"],"names":[],"mappings":"","sourcesContent":["import type {\n  GetEntryPointFromAccount,\n  SmartContractAccount,\n} from \"../account/smartContractAccount\";\nimport type { UserOperationContext } from \"../actions/smartAccount/types\";\nimport type {\n  UserOperationFeeOptions,\n  UserOperationOverrides,\n  UserOperationStruct,\n} from \"../types\";\nimport type { Deferrable } from \"../utils\";\nimport type { MiddlewareClient } from \"./actions\";\n\n// [!region ClientMiddlewareFn]\nexport type ClientMiddlewareFn<\n  TContext extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n> = <\n  TAccount extends SmartContractAccount,\n  C extends MiddlewareClient,\n  TEntryPointVersion extends GetEntryPointFromAccount<TAccount> = GetEntryPointFromAccount<TAccount>\n>(\n  struct: Deferrable<UserOperationStruct<TEntryPointVersion>>,\n  args: {\n    overrides?: UserOperationOverrides<TEntryPointVersion>;\n    context?: TContext;\n    feeOptions?: UserOperationFeeOptions;\n    account: TAccount;\n    client: C;\n  }\n) => Promise<Deferrable<UserOperationStruct<TEntryPointVersion>>>;\n// [!endregion ClientMiddlewareFn]\n\n// [!region ClientMiddleware]\nexport type ClientMiddleware<\n  TContext extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n> = {\n  dummyPaymasterAndData: ClientMiddlewareFn<TContext>;\n  feeEstimator: ClientMiddlewareFn<TContext>;\n  gasEstimator: ClientMiddlewareFn<TContext>;\n  customMiddleware: ClientMiddlewareFn<TContext>;\n  paymasterAndData: ClientMiddlewareFn<TContext>;\n  userOperationSimulator: ClientMiddlewareFn<TContext>;\n  signUserOperation: ClientMiddlewareFn<TContext>;\n};\n// [!endregion ClientMiddleware]\n"]}