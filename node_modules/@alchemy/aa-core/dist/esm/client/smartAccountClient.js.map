{"version":3,"file":"smartAccountClient.js","sourceRoot":"","sources":["../../../src/client/smartAccountClient.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  custom,\n  type Chain,\n  type Client,\n  type ClientConfig,\n  type CustomTransport,\n  type FormattedTransactionRequest,\n  type PublicActions,\n  type PublicRpcSchema,\n  type RpcSchema,\n  type Transport,\n} from \"viem\";\nimport { z } from \"zod\";\nimport type { SmartContractAccount } from \"../account/smartContractAccount.js\";\nimport type { UserOperationContext } from \"../actions/smartAccount/types.js\";\nimport { AccountNotFoundError } from \"../errors/account.js\";\nimport { ChainNotFoundError } from \"../errors/client.js\";\nimport { middlewareActions } from \"../middleware/actions.js\";\nimport type { ClientMiddleware } from \"../middleware/types.js\";\nimport type { Prettify } from \"../utils/index.js\";\nimport { createBundlerClient, type BundlerClient } from \"./bundlerClient.js\";\nimport {\n  type BundlerActions,\n  type BundlerRpcSchema,\n} from \"./decorators/bundlerClient.js\";\nimport {\n  smartAccountClientActions,\n  type BaseSmartAccountClientActions,\n} from \"./decorators/smartAccountClient.js\";\nimport { SmartAccountClientOptsSchema } from \"./schema.js\";\nimport type { ClientMiddlewareConfig } from \"./types.js\";\n\ntype SmartAccountClientOpts = z.output<typeof SmartAccountClientOptsSchema>;\n\nexport type SmartAccountClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  context extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, account>,\n    | \"cacheTime\"\n    | \"chain\"\n    | \"key\"\n    | \"name\"\n    | \"pollingInterval\"\n    | \"transport\"\n    | \"type\"\n  > & {\n    account?: account;\n    opts?: z.input<typeof SmartAccountClientOptsSchema>;\n  } & ClientMiddlewareConfig<context>\n>;\n\nexport type SmartAccountClientRpcSchema = [\n  ...BundlerRpcSchema,\n  ...PublicRpcSchema\n];\n\n//#region SmartAccountClientActions\nexport type SmartAccountClientActions<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  context extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n> = BaseSmartAccountClientActions<chain, account, context> &\n  BundlerActions &\n  PublicActions;\n//#endregion SmartAccountClientActions\n\n//#region SmartAccountClient\nexport type SmartAccountClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  actions extends Record<string, unknown> = Record<string, unknown>,\n  rpcSchema extends RpcSchema = SmartAccountClientRpcSchema,\n  context extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    account,\n    rpcSchema,\n    actions & SmartAccountClientActions<chain, account, context>\n  >\n>;\n//#endregion SmartAccountClient\n\nexport type BaseSmartAccountClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  context extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    account,\n    [...BundlerRpcSchema, ...PublicRpcSchema],\n    {\n      middleware: ClientMiddleware<context>;\n    } & SmartAccountClientOpts &\n      BundlerActions &\n      PublicActions\n  >\n>;\n\nexport function createSmartAccountClient<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TContext extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n>(\n  config: SmartAccountClientConfig<TTransport, TChain, TAccount, TContext>\n): SmartAccountClient<TTransport, TChain, TAccount>;\n\nexport function createSmartAccountClient(\n  config: SmartAccountClientConfig\n): SmartAccountClient {\n  const {\n    key = \"account\",\n    name = \"account provider\",\n    transport,\n    type = \"SmartAccountClient\",\n    ...params\n  } = config;\n\n  const client: SmartAccountClient = createBundlerClient({\n    ...params,\n    key,\n    name,\n    // we start out with this because the base methods for a SmartAccountClient\n    // require a smart account client, but once we have completed building everything\n    // we want to override this value with the one passed in by the extender\n    type: \"SmartAccountClient\",\n    // TODO: this needs to be tested\n    transport: (opts) => {\n      const rpcTransport = transport(opts);\n\n      return custom({\n        async request({ method, params }) {\n          switch (method) {\n            case \"eth_accounts\": {\n              if (!client.account) {\n                throw new AccountNotFoundError();\n              }\n\n              return [client.account.address];\n            }\n            case \"eth_sendTransaction\":\n              if (!client.account) {\n                throw new AccountNotFoundError();\n              }\n              if (!client.chain) {\n                throw new ChainNotFoundError();\n              }\n              const [tx] = params as [FormattedTransactionRequest];\n              return client.sendTransaction({\n                ...tx,\n                account: client.account,\n                chain: client.chain,\n              });\n            case \"eth_sign\":\n              if (!client.account) {\n                throw new AccountNotFoundError();\n              }\n              const [address, data] = params!;\n              if (address !== client.account.address) {\n                throw new Error(\n                  \"cannot sign for address that is not the current account\"\n                );\n              }\n              return client.signMessage(data);\n            case \"personal_sign\": {\n              if (!client.account) {\n                throw new AccountNotFoundError();\n              }\n              const [data, address] = params!;\n              if (address !== client.account.address) {\n                throw new Error(\n                  \"cannot sign for address that is not the current account\"\n                );\n              }\n              return client.signMessage(data);\n            }\n            case \"eth_signTypedData_v4\": {\n              if (!client.account) {\n                throw new AccountNotFoundError();\n              }\n              const [address, dataParams] = params!;\n              if (address !== client.account.address) {\n                throw new Error(\n                  \"cannot sign for address that is not the current account\"\n                );\n              }\n              return client.signTypedData(dataParams);\n            }\n            case \"eth_chainId\":\n              if (!opts.chain) {\n                throw new ChainNotFoundError();\n              }\n\n              return opts.chain.id;\n            default:\n              // TODO: there's probably a number of methods we just don't support, will need to test most of them out\n              // first let's get something working though\n              return rpcTransport.request({ method, params });\n          }\n        },\n      })(opts);\n    },\n  })\n    .extend(() => ({\n      ...SmartAccountClientOptsSchema.parse(config.opts ?? {}),\n    }))\n    .extend(middlewareActions(config))\n    .extend(smartAccountClientActions);\n\n  return { ...client, type };\n}\n\nexport function createSmartAccountClientFromExisting<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TClient extends BundlerClient<TTransport> = BundlerClient<TTransport>,\n  TActions extends SmartAccountClientActions<\n    TChain,\n    TAccount,\n    TContext\n  > = SmartAccountClientActions<TChain, TAccount>,\n  TRpcSchema extends SmartAccountClientRpcSchema = SmartAccountClientRpcSchema,\n  TContext extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n>(\n  config: Omit<\n    SmartAccountClientConfig<Transport, TChain, TAccount, TContext>,\n    \"transport\" | \"chain\"\n  > & { client: TClient }\n): SmartAccountClient<\n  CustomTransport,\n  TChain,\n  TAccount,\n  TActions,\n  TRpcSchema,\n  TContext\n>;\n\nexport function createSmartAccountClientFromExisting(\n  config: Omit<SmartAccountClientConfig, \"transport\" | \"chain\"> & {\n    client: BundlerClient;\n  }\n): SmartAccountClient {\n  return createSmartAccountClient({\n    ...config,\n    chain: config.client.chain,\n    transport: custom(config.client),\n  });\n}\n"]}