{"version":3,"file":"0.7.js","sourceRoot":"","sources":["../../../src/entrypoint/0.7.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,MAAM,EACN,mBAAmB,EACnB,WAAW,EACX,SAAS,EACT,SAAS,EACT,GAAG,GAKJ,MAAM,MAAM,CAAC;AACd,OAAO,EAAE,gBAAgB,EAAE,MAAM,6BAA6B,CAAC;AAO/D,MAAM,iBAAiB,GAAG,CAAC,OAAsC,EAAO,EAAE;IACxE,MAAM,QAAQ,GACZ,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,WAAW;QACpC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;QAChD,CAAC,CAAC,IAAI,CAAC;IACX,MAAM,gBAAgB,GAAG,oBAAoB,CAC3C,CAAC,CAAC,EAAE,oBAAoB,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5C,oBAAoB;QACpB,YAAY;KACb,CAAC,CAAC,CAAC,OAAO,CAAC,CACb,CAAC;IAEF,MAAM,OAAO,GAAG,oBAAoB,CAClC,CAAC,CAAC,EAAE,oBAAoB,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5C,oBAAoB;QACpB,YAAY;KACb,CAAC,CAAC,CAAC,OAAO,CAAC,CACb,CAAC;IAEF,MAAM,gBAAgB,GACpB,OAAO,CAAC,SAAS,IAAI,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC;QAC/C,CAAC,CAAC,iBAAiB,CACf,CAAC,CAAC,EACA,SAAS,EACT,6BAA6B,EAC7B,uBAAuB,EACvB,aAAa,GACd,EAAE,EAAE,CAAC,CAAC;YACL,SAAS;YACT,6BAA6B;YAC7B,uBAAuB;YACvB,aAAa;SACd,CAAC,CAAC,CAAC,OAAO,CAAC,CACb;QACH,CAAC,CAAC,IAAI,CAAC;IAEX,OAAO,mBAAmB,CACxB;QACE,EAAE,IAAI,EAAE,SAAS,EAAE;QACnB,EAAE,IAAI,EAAE,SAAS,EAAE;QACnB,EAAE,IAAI,EAAE,SAAS,EAAE;QACnB,EAAE,IAAI,EAAE,SAAS,EAAE;QACnB,EAAE,IAAI,EAAE,SAAS,EAAE;QACnB,EAAE,IAAI,EAAE,SAAS,EAAE;QACnB,EAAE,IAAI,EAAE,SAAS,EAAE;QACnB,EAAE,IAAI,EAAE,SAAS,EAAE;KACpB,EACD;QACE,OAAO,CAAC,MAAiB;QACzB,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC;QAC1B,SAAS,CAAC,QAAQ,CAAC;QACnB,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC3B,gBAAgB;QAChB,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC;QACvC,OAAO;QACP,SAAS,CAAC,gBAAgB,CAAC;KAC5B,CACF,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe;IACb,OAAO,EAAE,OAAO;IAEhB,OAAO,EAAE;QACP,OAAO,EAAE,4CAA4C;KACtD;IAED,GAAG,EAAE,gBAAgB;IAErB,oBAAoB,EAAE,CACpB,OAAsC,EACtC,iBAA0B,EAC1B,OAAe,EACT,EAAE;QACR,MAAM,OAAO,GAAG,mBAAmB,CACjC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,EAC/D;YACE,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YACrC,iBAAiB;YACjB,MAAM,CAAC,OAAO,CAAC;SAChB,CACF,CAAC;QAEF,OAAO,SAAS,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,iBAAiB;CACqD,CAAC;AAEzE,MAAM,UAAU,oBAAoB,CAClC,IAE0E;IAE1E,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,EAChC,SAAS,EACT,6BAA6B,EAC7B,uBAAuB,EACvB,aAAa,GAOd;IACC,IACE,CAAC,SAAS;QACV,CAAC,6BAA6B;QAC9B,CAAC,uBAAuB;QACxB,CAAC,aAAa,EACd,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,MAAM,CAAC;QACZ,SAAS;QACT,GAAG,CAAC,6BAA6B,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAChD,GAAG,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAC1C,aAAa;KACd,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,gBAAwB;IAI7D,OAAO;QACL,oBAAoB,EAAE,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;QACjE,YAAY,EAAE,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;KACvD,CAAC;AACJ,CAAC","sourcesContent":["import {\n  concat,\n  encodeAbiParameters,\n  hexToBigInt,\n  isAddress,\n  keccak256,\n  pad,\n  type Address,\n  type Chain,\n  type Hash,\n  type Hex,\n} from \"viem\";\nimport { EntryPointAbi_v7 } from \"../abis/EntryPointAbi_v7.js\";\nimport type {\n  UserOperationRequest,\n  UserOperationRequest_v7,\n} from \"../types.js\";\nimport type { SupportedEntryPoint } from \"./types.js\";\n\nconst packUserOperation = (request: UserOperationRequest<\"0.7.0\">): Hex => {\n  const initCode =\n    request.factory && request.factoryData\n      ? concat([request.factory, request.factoryData])\n      : \"0x\";\n  const accountGasLimits = packAccountGasLimits(\n    (({ verificationGasLimit, callGasLimit }) => ({\n      verificationGasLimit,\n      callGasLimit,\n    }))(request)\n  );\n\n  const gasFees = packAccountGasLimits(\n    (({ maxPriorityFeePerGas, maxFeePerGas }) => ({\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n    }))(request)\n  );\n\n  const paymasterAndData =\n    request.paymaster && isAddress(request.paymaster)\n      ? packPaymasterData(\n          (({\n            paymaster,\n            paymasterVerificationGasLimit,\n            paymasterPostOpGasLimit,\n            paymasterData,\n          }) => ({\n            paymaster,\n            paymasterVerificationGasLimit,\n            paymasterPostOpGasLimit,\n            paymasterData,\n          }))(request)\n        )\n      : \"0x\";\n\n  return encodeAbiParameters(\n    [\n      { type: \"address\" },\n      { type: \"uint256\" },\n      { type: \"bytes32\" },\n      { type: \"bytes32\" },\n      { type: \"bytes32\" },\n      { type: \"uint256\" },\n      { type: \"bytes32\" },\n      { type: \"bytes32\" },\n    ],\n    [\n      request.sender as Address,\n      hexToBigInt(request.nonce),\n      keccak256(initCode),\n      keccak256(request.callData),\n      accountGasLimits,\n      hexToBigInt(request.preVerificationGas),\n      gasFees,\n      keccak256(paymasterAndData),\n    ]\n  );\n};\n\nexport default {\n  version: \"0.7.0\",\n\n  address: {\n    default: \"0x0000000071727De22E5E9d8BAf0edAc6f37da032\",\n  },\n\n  abi: EntryPointAbi_v7,\n\n  getUserOperationHash: (\n    request: UserOperationRequest<\"0.7.0\">,\n    entryPointAddress: Address,\n    chainId: number\n  ): Hash => {\n    const encoded = encodeAbiParameters(\n      [{ type: \"bytes32\" }, { type: \"address\" }, { type: \"uint256\" }],\n      [\n        keccak256(packUserOperation(request)),\n        entryPointAddress,\n        BigInt(chainId),\n      ]\n    );\n\n    return keccak256(encoded);\n  },\n\n  packUserOperation,\n} satisfies SupportedEntryPoint<\"0.7.0\", Chain, typeof EntryPointAbi_v7>;\n\nexport function packAccountGasLimits(\n  data:\n    | Pick<UserOperationRequest_v7, \"verificationGasLimit\" | \"callGasLimit\">\n    | Pick<UserOperationRequest_v7, \"maxPriorityFeePerGas\" | \"maxFeePerGas\">\n): Hex {\n  return concat(Object.values(data).map((v) => pad(v, { size: 16 })));\n}\n\nexport function packPaymasterData({\n  paymaster,\n  paymasterVerificationGasLimit,\n  paymasterPostOpGasLimit,\n  paymasterData,\n}: Pick<\n  UserOperationRequest_v7,\n  | \"paymaster\"\n  | \"paymasterVerificationGasLimit\"\n  | \"paymasterPostOpGasLimit\"\n  | \"paymasterData\"\n>): Hex {\n  if (\n    !paymaster ||\n    !paymasterVerificationGasLimit ||\n    !paymasterPostOpGasLimit ||\n    !paymasterData\n  ) {\n    return \"0x\";\n  }\n  return concat([\n    paymaster,\n    pad(paymasterVerificationGasLimit, { size: 16 }),\n    pad(paymasterPostOpGasLimit, { size: 16 }),\n    paymasterData,\n  ]);\n}\n\nexport function unpackAccountGasLimits(accountGasLimits: string): {\n  verificationGasLimit: number;\n  callGasLimit: number;\n} {\n  return {\n    verificationGasLimit: parseInt(accountGasLimits.slice(2, 34), 16),\n    callGasLimit: parseInt(accountGasLimits.slice(34), 16),\n  };\n}\n"]}