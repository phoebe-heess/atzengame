{"version":3,"file":"sendRawUserOperation.js","sourceRoot":"","sources":["../../../../src/actions/bundler/sendRawUserOperation.ts"],"names":[],"mappings":"AAKA,MAAM,CAAC,MAAM,oBAAoB,GAAG,KAAK,EAIvC,MAAe,EACf,IAGC,EACa,EAAE;IAChB,OAAO,MAAM,CAAC,OAAO,CAAC;QACpB,MAAM,EAAE,uBAAuB;QAC/B,MAAM,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC;KACxC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import type { Address, Chain, Client, Hex, Transport } from \"viem\";\nimport type { BundlerRpcSchema } from \"../../client/decorators/bundlerClient\";\nimport type { EntryPointVersion } from \"../../entrypoint/types\";\nimport type { UserOperationRequest } from \"../../types\";\n\nexport const sendRawUserOperation = async <\n  TClient extends Client<Transport, Chain | undefined, any, BundlerRpcSchema>,\n  TEntryPointVersion extends EntryPointVersion = EntryPointVersion\n>(\n  client: TClient,\n  args: {\n    request: UserOperationRequest<TEntryPointVersion>;\n    entryPoint: Address;\n  }\n): Promise<Hex> => {\n  return client.request({\n    method: \"eth_sendUserOperation\",\n    params: [args.request, args.entryPoint],\n  });\n};\n"]}