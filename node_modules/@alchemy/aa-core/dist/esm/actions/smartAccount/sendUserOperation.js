import { isBaseSmartAccountClient } from "../../client/isSmartAccountClient.js";
import { AccountNotFoundError } from "../../errors/account.js";
import { IncompatibleClientError } from "../../errors/client.js";
import { buildUserOperation } from "./buildUserOperation.js";
import { _sendUserOperation } from "./internal/sendUserOperation.js";
export async function sendUserOperation(client, args) {
    const { account = client.account, context, overrides } = args;
    if (!account) {
        throw new AccountNotFoundError();
    }
    if (!isBaseSmartAccountClient(client)) {
        throw new IncompatibleClientError("BaseSmartAccountClient", "sendUserOperation", client);
    }
    const uoStruct = await buildUserOperation(client, {
        uo: args.uo,
        account,
        context,
        overrides,
    });
    return _sendUserOperation(client, {
        account,
        uoStruct,
        context,
        overrides,
    });
}
//# sourceMappingURL=sendUserOperation.js.map