import type { Chain, Transport } from "viem";
import type { GetAccountParameter, GetEntryPointFromAccount, SmartContractAccount } from "../../../account/smartContractAccount";
import type { BaseSmartAccountClient } from "../../../client/smartAccountClient";
import type { UserOperationOverridesParameter, UserOperationStruct } from "../../../types";
import { type Deferrable } from "../../../utils/index.js";
import type { UserOperationContext } from "../types";
export declare function _runMiddlewareStack<TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TAccount extends SmartContractAccount | undefined = SmartContractAccount | undefined, TContext extends UserOperationContext | undefined = UserOperationContext | undefined, TEntryPointVersion extends GetEntryPointFromAccount<TAccount> = GetEntryPointFromAccount<TAccount>>(client: BaseSmartAccountClient<TTransport, TChain, TAccount>, args: {
    uo: Deferrable<UserOperationStruct<TEntryPointVersion>>;
    context?: TContext;
} & GetAccountParameter<TAccount> & UserOperationOverridesParameter<TEntryPointVersion>): Promise<UserOperationStruct<TEntryPointVersion>>;
