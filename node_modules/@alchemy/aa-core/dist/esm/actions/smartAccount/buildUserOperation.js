import {} from "../../account/smartContractAccount.js";
import { isBaseSmartAccountClient } from "../../client/isSmartAccountClient.js";
import { AccountNotFoundError } from "../../errors/account.js";
import { IncompatibleClientError } from "../../errors/client.js";
import { _initUserOperation } from "./internal/initUserOperation.js";
import { _runMiddlewareStack } from "./internal/runMiddlewareStack.js";
export async function buildUserOperation(client, args) {
    const { account = client.account, overrides, context } = args;
    if (!account) {
        throw new AccountNotFoundError();
    }
    if (!isBaseSmartAccountClient(client)) {
        throw new IncompatibleClientError("BaseSmartAccountClient", "buildUserOperation", client);
    }
    return _initUserOperation(client, args).then((_uo) => _runMiddlewareStack(client, {
        uo: _uo,
        overrides,
        account,
        context,
    }));
}
//# sourceMappingURL=buildUserOperation.js.map