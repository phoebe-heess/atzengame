{"version":3,"file":"IHybridPaymaster.js","sourceRoot":"","sources":["../../../src/interfaces/IHybridPaymaster.ts"],"names":[],"mappings":"","sourcesContent":["import { type UserOperationStruct } from \"@alchemy/aa-core\";\nimport {\n  FeeQuotesOrDataResponse,\n  BiconomyTokenPaymasterRequest,\n  FeeQuotesOrDataDto,\n  PaymasterAndDataResponse,\n  type Transaction,\n} from \"../utils/Types.js\";\nimport { IPaymaster } from \"./IPaymaster.js\";\n\nexport interface IHybridPaymaster<T> extends IPaymaster {\n  getPaymasterAndData(_userOp: Partial<UserOperationStruct>, _paymasterServiceData?: T): Promise<PaymasterAndDataResponse>;\n  getDummyPaymasterAndData(_userOp: Partial<UserOperationStruct>, _paymasterServiceData?: T): Promise<string>;\n  buildTokenApprovalTransaction(_tokenPaymasterRequest: BiconomyTokenPaymasterRequest): Promise<Transaction>;\n  getPaymasterFeeQuotesOrData(_userOp: Partial<UserOperationStruct>, _paymasterServiceData: FeeQuotesOrDataDto): Promise<FeeQuotesOrDataResponse>;\n}\n"]}